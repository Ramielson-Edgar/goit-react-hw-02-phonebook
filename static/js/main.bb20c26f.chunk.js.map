{"version":3,"sources":["Phonebook/Filter/Filter.module.css","Phonebook/ContactForm/ContactForm.module.css","Phonebook/ContactList/ContactList.module.css","Phonebook/ContactForm/ContactForm.js","Phonebook/ContactList/ContactList.js","Phonebook/Filter/Filter.js","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","evt","preventDefault","props","addContact","reset","this","className","s","wrapper","form","onSubmit","labelName","htmlFor","id","type","placeholder","onChange","inputName","labelNumber","inputNumber","btn","onClick","Component","shortid","generate","ContactList","contacts","onRemove","list","map","item","Filter","handleChangeFilter","filter","e","App","numbers","prevState","find","alert","getVisible","text","toLowerCase","includes","removeContact","contactId","contact","getVisibleContacts","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb20c26f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__ZTb_R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__ML59W\",\"wrapper\":\"ContactForm_wrapper__1HxIp\",\"inputName\":\"ContactForm_inputName__e2AGk\",\"inputNumber\":\"ContactForm_inputNumber__2Egfh\",\"btn\":\"ContactForm_btn__1cRmy\",\"labelName\":\"ContactForm_labelName__iU96z\",\"labelNumber\":\"ContactForm_labelNumber__2Xf7c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__YO3aH\",\"item\":\"ContactList_item__3XbMO\",\"btn\":\"ContactList_btn__2LFnl\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  static id = shortid.generate();\r\n\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    this.props.addContact({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <div className={s.wrapper}>\r\n          <form className={s.form} onSubmit={this.handleSubmit}>\r\n            <label className={s.labelName} htmlFor={this.id}>\r\n              Name\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Jhon Dou\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              id={this.id}\r\n              className={s.inputName}\r\n            />\r\n            <label className={s.labelNumber} htmlFor={this.id}>\r\n              Number\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              placeholder=\"123-456-789\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              id={this.id}\r\n              className={s.inputNumber}\r\n            />\r\n            <button className={s.btn} type=\"submit\" onClick={this.addContact}>\r\n              add contact\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  state: PropTypes.oneOf(['name', 'number']),\r\n  name: PropTypes.string,\r\n  value: PropTypes.number,\r\n  handleChange: PropTypes.func,\r\n  id: PropTypes.string,\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemove }) => {\r\n  return (\r\n    <>\r\n      <ul className={s.list}>\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li key={id} className={s.item}>\r\n            <span className={s.name}>\r\n              <strong>{name}</strong>: {number}\r\n            </span>\r\n            <button\r\n              className={s.btn}\r\n              type=\"button\"\r\n              onClick={() => onRemove(id)}\r\n            >\r\n              Удалить\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default ContactList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\nconst Filter = ({ value, handleChangeFilter }) => {\r\n  return (\r\n    <>\r\n      <div className=\"wrapper\">\r\n        <p>Find contacts by name</p>\r\n        <input\r\n          className={s.filter}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={value}\r\n          onChange={e => handleChangeFilter(e.target.value)}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  handleChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../src/bases.css';\nimport shortid from 'shortid';\nimport ContactForm from './Phonebook/ContactForm';\nimport ContactList from './Phonebook/ContactList';\nimport Filter from './Phonebook/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const numbers = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n\n    this.setState(prevState => {\n      const { contacts } = this.state;\n      if (contacts.find(item => item.name === name)) {\n        alert(`${name} is already in contacts`);\n        return;\n      }\n\n      return {\n        contacts: [numbers, ...prevState.contacts],\n      };\n    });\n  };\n\n  handleChangeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisible = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(text =>\n      text.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  removeContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const getVisibleContacts = this.getVisible();\n\n    return (\n      <>\n        <div className=\"container\">\n          <h1>Phonebook</h1>\n          <ContactForm addContact={this.addContact} />\n\n          <div className=\"wrap\">\n            <h2>Contacts</h2>\n            <Filter\n              value={filter}\n              handleChangeFilter={this.handleChangeFilter}\n            />\n            {getVisibleContacts.length > 0 && (\n              <ContactList\n                contacts={getVisibleContacts}\n                onRemove={this.removeContact}\n              />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\nApp.propTypes = {\n  filter: PropTypes.string,\n  state: PropTypes.arrayOf(\n    PropTypes.shape({\n      contacts: PropTypes.string,\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./bases.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}